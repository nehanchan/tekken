type Character @aws_iam @aws_cognito_user_pools {
  name: String!
  fightingStyle: String
  country: String
  height: Int
  weight: Int
  description: String
  imageUrl: String
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Move @aws_iam @aws_cognito_user_pools {
  name: String!
  command: String!
  damage: Int
  startupFrame: Int
  blockFrame: String
  hitFrame: String
  moveType: MoveMoveType
  element: MoveElement
  description: String
  iconId: String
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Post @aws_iam @aws_cognito_user_pools {
  title: String!
  content: String!
  author: String!
  characterId: ID
  likes: Int
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  owner: String
}

enum MoveMoveType {
  HIGH
  MID
  LOW
  THROW
  SPECIAL
}

enum MoveElement {
  NORMAL
  SPECIAL
  ULTIMATE
}

input AmplifyAIConversationTurnErrorInput {
  errorType: String!
  message: String!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelCharacterConnection @aws_iam @aws_cognito_user_pools {
  items: [Character]!
  nextToken: String
}

input ModelCharacterFilterInput {
  name: ModelStringInput
  fightingStyle: ModelStringInput
  country: ModelStringInput
  height: ModelIntInput
  weight: ModelIntInput
  description: ModelStringInput
  imageUrl: ModelStringInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelCharacterFilterInput]
  or: [ModelCharacterFilterInput]
  not: ModelCharacterFilterInput
}

type Query {
  getCharacter(id: ID!): Character @aws_iam @aws_cognito_user_pools
  listCharacters(filter: ModelCharacterFilterInput, limit: Int, nextToken: String): ModelCharacterConnection @aws_iam @aws_cognito_user_pools
  getMove(id: ID!): Move @aws_iam @aws_cognito_user_pools
  listMoves(filter: ModelMoveFilterInput, limit: Int, nextToken: String): ModelMoveConnection @aws_iam @aws_cognito_user_pools
  getPost(id: ID!): Post @aws_iam @aws_cognito_user_pools
  listPosts(filter: ModelPostFilterInput, limit: Int, nextToken: String): ModelPostConnection @aws_iam @aws_cognito_user_pools
}

input ModelCharacterConditionInput {
  name: ModelStringInput
  fightingStyle: ModelStringInput
  country: ModelStringInput
  height: ModelIntInput
  weight: ModelIntInput
  description: ModelStringInput
  imageUrl: ModelStringInput
  and: [ModelCharacterConditionInput]
  or: [ModelCharacterConditionInput]
  not: ModelCharacterConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
}

input CreateCharacterInput {
  name: String!
  fightingStyle: String
  country: String
  height: Int
  weight: Int
  description: String
  imageUrl: String
  id: ID
}

input UpdateCharacterInput {
  name: String
  fightingStyle: String
  country: String
  height: Int
  weight: Int
  description: String
  imageUrl: String
  id: ID!
}

input DeleteCharacterInput {
  id: ID!
}

type Mutation {
  createCharacter(input: CreateCharacterInput!, condition: ModelCharacterConditionInput): Character @aws_iam @aws_cognito_user_pools
  updateCharacter(input: UpdateCharacterInput!, condition: ModelCharacterConditionInput): Character @aws_iam @aws_cognito_user_pools
  deleteCharacter(input: DeleteCharacterInput!, condition: ModelCharacterConditionInput): Character @aws_iam @aws_cognito_user_pools
  createMove(input: CreateMoveInput!, condition: ModelMoveConditionInput): Move @aws_iam @aws_cognito_user_pools
  updateMove(input: UpdateMoveInput!, condition: ModelMoveConditionInput): Move @aws_iam @aws_cognito_user_pools
  deleteMove(input: DeleteMoveInput!, condition: ModelMoveConditionInput): Move @aws_iam @aws_cognito_user_pools
  createPost(input: CreatePostInput!, condition: ModelPostConditionInput): Post @aws_iam @aws_cognito_user_pools
  updatePost(input: UpdatePostInput!, condition: ModelPostConditionInput): Post @aws_iam @aws_cognito_user_pools
  deletePost(input: DeletePostInput!, condition: ModelPostConditionInput): Post @aws_iam @aws_cognito_user_pools
}

input ModelSubscriptionCharacterFilterInput {
  name: ModelSubscriptionStringInput
  fightingStyle: ModelSubscriptionStringInput
  country: ModelSubscriptionStringInput
  height: ModelSubscriptionIntInput
  weight: ModelSubscriptionIntInput
  description: ModelSubscriptionStringInput
  imageUrl: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionCharacterFilterInput]
  or: [ModelSubscriptionCharacterFilterInput]
}

type Subscription {
  onCreateCharacter(filter: ModelSubscriptionCharacterFilterInput): Character @aws_subscribe(mutations: ["createCharacter"]) @aws_iam @aws_cognito_user_pools
  onUpdateCharacter(filter: ModelSubscriptionCharacterFilterInput): Character @aws_subscribe(mutations: ["updateCharacter"]) @aws_iam @aws_cognito_user_pools
  onDeleteCharacter(filter: ModelSubscriptionCharacterFilterInput): Character @aws_subscribe(mutations: ["deleteCharacter"]) @aws_iam @aws_cognito_user_pools
  onCreateMove(filter: ModelSubscriptionMoveFilterInput): Move @aws_subscribe(mutations: ["createMove"]) @aws_iam @aws_cognito_user_pools
  onUpdateMove(filter: ModelSubscriptionMoveFilterInput): Move @aws_subscribe(mutations: ["updateMove"]) @aws_iam @aws_cognito_user_pools
  onDeleteMove(filter: ModelSubscriptionMoveFilterInput): Move @aws_subscribe(mutations: ["deleteMove"]) @aws_iam @aws_cognito_user_pools
  onCreatePost(filter: ModelSubscriptionPostFilterInput, owner: String): Post @aws_subscribe(mutations: ["createPost"]) @aws_iam @aws_cognito_user_pools
  onUpdatePost(filter: ModelSubscriptionPostFilterInput, owner: String): Post @aws_subscribe(mutations: ["updatePost"]) @aws_iam @aws_cognito_user_pools
  onDeletePost(filter: ModelSubscriptionPostFilterInput, owner: String): Post @aws_subscribe(mutations: ["deletePost"]) @aws_iam @aws_cognito_user_pools
}

type ModelMoveConnection @aws_iam @aws_cognito_user_pools {
  items: [Move]!
  nextToken: String
}

input ModelMoveMoveTypeInput {
  eq: MoveMoveType
  ne: MoveMoveType
}

input ModelMoveElementInput {
  eq: MoveElement
  ne: MoveElement
}

input ModelMoveFilterInput {
  name: ModelStringInput
  command: ModelStringInput
  damage: ModelIntInput
  startupFrame: ModelIntInput
  blockFrame: ModelStringInput
  hitFrame: ModelStringInput
  moveType: ModelMoveMoveTypeInput
  element: ModelMoveElementInput
  description: ModelStringInput
  iconId: ModelStringInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelMoveFilterInput]
  or: [ModelMoveFilterInput]
  not: ModelMoveFilterInput
}

input ModelMoveConditionInput {
  name: ModelStringInput
  command: ModelStringInput
  damage: ModelIntInput
  startupFrame: ModelIntInput
  blockFrame: ModelStringInput
  hitFrame: ModelStringInput
  moveType: ModelMoveMoveTypeInput
  element: ModelMoveElementInput
  description: ModelStringInput
  iconId: ModelStringInput
  and: [ModelMoveConditionInput]
  or: [ModelMoveConditionInput]
  not: ModelMoveConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
}

input CreateMoveInput {
  name: String!
  command: String!
  damage: Int
  startupFrame: Int
  blockFrame: String
  hitFrame: String
  moveType: MoveMoveType
  element: MoveElement
  description: String
  iconId: String
  id: ID
}

input UpdateMoveInput {
  name: String
  command: String
  damage: Int
  startupFrame: Int
  blockFrame: String
  hitFrame: String
  moveType: MoveMoveType
  element: MoveElement
  description: String
  iconId: String
  id: ID!
}

input DeleteMoveInput {
  id: ID!
}

input ModelSubscriptionMoveFilterInput {
  name: ModelSubscriptionStringInput
  command: ModelSubscriptionStringInput
  damage: ModelSubscriptionIntInput
  startupFrame: ModelSubscriptionIntInput
  blockFrame: ModelSubscriptionStringInput
  hitFrame: ModelSubscriptionStringInput
  moveType: ModelSubscriptionStringInput
  element: ModelSubscriptionStringInput
  description: ModelSubscriptionStringInput
  iconId: ModelSubscriptionStringInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionMoveFilterInput]
  or: [ModelSubscriptionMoveFilterInput]
}

type ModelPostConnection @aws_iam @aws_cognito_user_pools {
  items: [Post]!
  nextToken: String
}

input ModelPostFilterInput {
  title: ModelStringInput
  content: ModelStringInput
  author: ModelStringInput
  characterId: ModelIDInput
  likes: ModelIntInput
  id: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelPostFilterInput]
  or: [ModelPostFilterInput]
  not: ModelPostFilterInput
  owner: ModelStringInput
}

input ModelPostConditionInput {
  title: ModelStringInput
  content: ModelStringInput
  author: ModelStringInput
  characterId: ModelIDInput
  likes: ModelIntInput
  and: [ModelPostConditionInput]
  or: [ModelPostConditionInput]
  not: ModelPostConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  owner: ModelStringInput
}

input CreatePostInput {
  title: String!
  content: String!
  author: String!
  characterId: ID
  likes: Int
  id: ID
}

input UpdatePostInput {
  title: String
  content: String
  author: String
  characterId: ID
  likes: Int
  id: ID!
}

input DeletePostInput {
  id: ID!
}

input ModelSubscriptionPostFilterInput {
  title: ModelSubscriptionStringInput
  content: ModelSubscriptionStringInput
  author: ModelSubscriptionStringInput
  characterId: ModelSubscriptionIDInput
  likes: ModelSubscriptionIntInput
  id: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionPostFilterInput]
  or: [ModelSubscriptionPostFilterInput]
  owner: ModelStringInput
}
